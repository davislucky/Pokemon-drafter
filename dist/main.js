/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("const abilitiesDisplay = document.querySelector(\".ability-selector-content\");\nconst typeDisplay = document.querySelector(\".types-content\");\nconst baseStatsDisplay = document.getElementsByClassName(\"number\");\nconst baseStatsBars = document.getElementsByClassName(\"stat-bar\");\nconst pokedexList = document.getElementById(\"pokedex-list\");\n// const displayEntry = document.querySelector(\".display\");\nconst preview = document.getElementById(\"preview-display\");\nconst movesDisplay = document.querySelector(\".moves-selector-content\");\nconst movesList = document.querySelector(\".move-selector-list\");\n// const itemsDisplay = document.querySelector(\".item-selector-content\");\n// const hp = document.querySelector(\".HP\");\n\nconst baseStatsContent = document.querySelector(\".base-stats-content\");\nconst baseStatsTable = document.querySelector(\".stats-table\");\nconst teamList = document.querySelector(\".team-list\");\nconst typesText = document.querySelector(\"#types\");\nconst abilityText = document.querySelector(\"#ability-selector\");\nlet pokedex = [];\nlet team = [];\n// let moves = [];\nconst displayTeamList = team => {\n  clearChildren(teamList);\n  team.forEach(member => {\n    const img = document.createElement(\"img\");\n    img.src = member.sprite;\n    const li = document.createElement(\"li\");\n    const span = document.createElement(\"span\");\n    // span.innerText = member.name;\n    img.display = \"inline\";\n    li.appendChild(img);\n    li.appendChild(span);\n    teamList.append(li);\n  });\n};\nconst fetchPokedex = async () => {\n  const url = `https://pokeapi.co/api/v2/pokemon?limit=1010`; // want to eventually limit this query based on user's limits\n  const res = await fetch(url);\n  const data = await res.json();\n  const pokedex = data.results.map((result, index) => ({\n    ...result,\n    name: result.name,\n    id: index + 1,\n    sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`\n  }));\n  return pokedex;\n};\nconst displayPokedex = pokedex => {\n  clearChildren(pokedexList);\n  pokedex.forEach(entry => {\n    const li = document.createElement(\"li\");\n    li.classList.add(\"list-item\", \"display\", `${entry.name}`);\n    const div = document.createElement(\"div\");\n    div.classList.add(\"list-content\");\n    const button = createButton(entry);\n    div.appendChild(button);\n    li.appendChild(div);\n    pokedexList.append(li);\n  });\n};\nconst filterPokedex = (input, pokedex) => {\n  const searchTerm = input.toUpperCase();\n  let result = [];\n  let name = \"\";\n  pokedex.forEach(entry => {\n    name = entry.name.toUpperCase();\n    if (name.includes(searchTerm)) {\n      result.push(entry);\n    }\n  });\n  return result;\n};\nfunction handleSearchInput(input) {\n  const filteredPokedex = filterPokedex(input, pokedex);\n  displayPokedex(filteredPokedex);\n}\ndocument.getElementById('search-input').addEventListener('input', function (event) {\n  handleSearchInput(event.target.value);\n});\nconst createButton = entry => {\n  const button = document.createElement(\"button\");\n  button.classList.add(\"display-button\");\n  const img = document.createElement(\"img\");\n  img.classList.add(\"small\");\n  img.src = entry.sprite;\n  const h2 = document.createElement(\"h2\");\n  h2.innerText = entry.id + \". \" + entry.name;\n  h2.classList.add(\"title\");\n  button.appendChild(img);\n  button.appendChild(h2);\n  button.addEventListener(\"click\", handleClickPokedex);\n  button.dataset.id = entry.id;\n  button.dataset.name = entry.name;\n  button.dataset.sprite = entry.sprite;\n  return button;\n};\nconst clearPokemonDisplay = () => {\n  clearChildren(movesList);\n  clearChildren(abilitiesDisplay);\n  clearChildren(typeDisplay);\n  clearChildren(baseStatsContent);\n};\nconst clearChildren = element => {\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n};\nconst handleClickPokedex = async event => {\n  const target = event.currentTarget;\n  changePreview(target.dataset.sprite);\n  const pokemon = await fetchPokemonData(target.dataset.id);\n  const moves = await fetchMoves(pokemon.moves);\n  displayPokemon(pokemon, moves);\n};\nconst displayPokemon = (pokemon, moves) => {\n  movesDisplay.style.display = \"block\";\n  abilityText.style.display = \"block\";\n  typesText.style.display = \"block\";\n  clearPokemonDisplay();\n  displayMoves(moves);\n  displayAbilities(pokemon.abilities);\n  displayType(pokemon.types);\n  displayBaseStats(pokemon.baseStat);\n  const addToTeamButton = document.querySelector(\"#add-to-team\");\n  addToTeamButton.dataset.pokemon = JSON.stringify(pokemon);\n  addToTeamButton.addEventListener(\"click\", handleAddToTeam);\n};\nconst handleAddToTeam = event => {\n  const pokemon = JSON.parse(event.currentTarget.dataset.pokemon);\n  if (team.length <= 5) {\n    team.push(pokemon);\n  }\n  displayTeamList(team);\n};\nconst displayType = types => {\n  types.forEach(type => {\n    const display = document.createElement(\"p\");\n    display.innerText = `${type}`;\n    display.classList.add(`${type}`);\n    typeDisplay.appendChild(display);\n  });\n};\nconst changePreview = src => {\n  preview.src = src;\n};\nconst fetchPokemonData = async id => {\n  const url = `https://pokeapi.co/api/v2/pokemon/${id}/`;\n  const res = await fetch(url);\n  const data = await res.json();\n  const pokemon = {};\n  pokemon.name = data.name;\n  pokemon.sprite = data.sprites.front_default;\n  pokemon.abilities = data.abilities.map(ability => ability.ability.name);\n  pokemon.types = data.types.map(type => type.type.name);\n  pokemon.moves = data.moves.map(move => move.move.name);\n  pokemon.baseStat = [];\n  for (let i = 0; i < data.stats.length; i++) {\n    pokemon.baseStat.push(data.stats[i].base_stat);\n  }\n  return pokemon;\n};\nconst fetchMoveInfo = async move => {\n  const url = `https://pokeapi.co/api/v2/move/${move}`;\n  const res = await fetch(url);\n  const data = await res.json();\n  return data;\n};\nconst fetchMoves = async moveNames => {\n  let result = Promise.all(moveNames.map(async name => {\n    const data = await fetchMoveInfo(name);\n    return data;\n  }));\n  return result;\n};\nconst displayMoves = moves => {\n  // console.log(moves)\n  moves.forEach(move => {\n    displayMove(move);\n  });\n};\nconst displayMove = move => {\n  const display = document.createElement(\"li\");\n  const url = document.createElement(\"a\");\n  url.innerText = `${move.name.split(\"-\").join(\" \").toUpperCase()}`; //.split(\"-\").join(\" \")\n  url.setAttribute(\"href\", `https://pokemondb.net/move/${move.name}`);\n  display.appendChild(url);\n  movesList.appendChild(display);\n  movesDisplay.appendChild(movesList);\n};\nconst fetchHoldableItems = async () => {\n  const url = `https://pokeapi.co/api/v2/item-attribute/holdable`;\n  const res = await fetch(url);\n  const data = await res.json();\n  const items = data.items;\n  return items;\n};\nconst displayAbilities = abilities => {\n  abilities.forEach(ability => {\n    const li = document.createElement(\"li\");\n    const a = document.createElement(\"a\");\n    a.setAttribute(\"href\", `https://pokemondb.net/ability/${ability}`);\n    a.innerText = `${ability.split(\"-\").join(\" \").toUpperCase()}`;\n    li.appendChild(a);\n    abilitiesDisplay.appendChild(li);\n  });\n};\nconst createStatsTable = () => {\n  const table = document.createElement(\"table\");\n  table.classList.add(\"stats-table\");\n  table.appendChild(createStatsTableRow(\"HP\"));\n  table.appendChild(createStatsTableRow(\"Attack\"));\n  table.appendChild(createStatsTableRow(\"Defense\"));\n  table.appendChild(createStatsTableRow(\"Special-Defense\"));\n  table.appendChild(createStatsTableRow(\"Special-Attack\"));\n  table.appendChild(createStatsTableRow(\"Speed\"));\n  baseStatsContent.appendChild(table);\n};\nconst createStatsTableRow = statName => {\n  const row = document.createElement(\"tr\");\n  row.classList.add(`${statName}`);\n  const header = document.createElement(\"th\");\n  header.innerText = `${statName}`.split(\"-\").join(\" \");\n  row.appendChild(header);\n  return row;\n};\nconst barChartColor = stat => {\n  const percent = stat / 230;\n  if (percent <= .25) {\n    return \"bad-stat\";\n  }\n  if (percent <= .50) {\n    return \"decent-stat\";\n  }\n  if (percent <= .75) {\n    return \"good-stat\";\n  }\n  return \"great-stat\";\n};\nconst makeBarChart = stat => {\n  const barchart = document.createElement(\"td\");\n  barchart.classList.add(\"cell-barchart\");\n  const width = stat * 100 / 230;\n  const statBar = document.createElement(\"div\");\n  statBar.classList.add(barChartColor(stat));\n  statBar.setAttribute(\"style\", `width:${width}%`);\n  statBar.classList.add(\"stat-bar\");\n  barchart.appendChild(statBar);\n  return barchart;\n};\nconst displayBaseStats = baseStats => {\n  createStatsTable();\n  const attack = document.querySelector(\".Attack\");\n  const defense = document.querySelector(\".Defense\");\n  const specialAttack = document.querySelector(\".Special-Attack\");\n  const specialDefense = document.querySelector(\".Special-Defense\");\n  const speed = document.querySelector(\".Speed\");\n  const hp = document.querySelector(\".HP\");\n  const tdhp = document.createElement(\"td\");\n  tdhp.classList.add(\"number\");\n  tdhp.innerText = baseStats[0];\n  hp.appendChild(tdhp);\n  const hpbar = makeBarChart(baseStats[0]);\n  hp.appendChild(hpbar);\n  const tdattack = document.createElement(\"td\");\n  tdattack.classList.add(\"number\");\n  tdattack.innerText = baseStats[1];\n  attack.appendChild(tdattack);\n  const attackBar = makeBarChart(baseStats[1]);\n  attack.appendChild(attackBar);\n  const tddefense = document.createElement(\"td\");\n  tddefense.classList.add(\"number\");\n  tddefense.innerText = baseStats[2];\n  defense.appendChild(tddefense);\n  const defenseBar = makeBarChart(baseStats[2]);\n  defense.appendChild(defenseBar);\n  const tdsattack = document.createElement(\"td\");\n  tdsattack.classList.add(\"number\");\n  tdsattack.innerText = baseStats[3];\n  specialAttack.appendChild(tdsattack);\n  const sABar = makeBarChart(baseStats[3]);\n  specialAttack.appendChild(sABar);\n  const tdsdefense = document.createElement(\"td\");\n  tdsdefense.classList.add(\"number\");\n  tdsdefense.innerText = baseStats[4];\n  specialDefense.appendChild(tdsdefense);\n  const sDBar = makeBarChart(baseStats[4]);\n  specialDefense.appendChild(sDBar);\n  const tdspeed = document.createElement(\"td\");\n  tdspeed.classList.add(\"number\");\n  tdspeed.innerText = baseStats[5];\n  speed.appendChild(tdspeed);\n  const speedBar = makeBarChart(baseStats[5]);\n  speed.appendChild(speedBar);\n};\nconst main = async () => {\n  movesDisplay.style.display = \"none\";\n  typesText.style.display = \"none\";\n  abilityText.style.display = \"none\";\n  pokedex = await fetchPokedex();\n  displayPokedex(pokedex);\n};\nmain();\n\n//item stuff\n// const fetchHeldItems = async (holdableItems) => {\n//   let result = Promise.all(holdableItems.map(async (item) => {\n//     const res = await fetch(item.url);\n//     const data = await res.json();\n\n//     return data;\n//   }));\n//   return result;\n// }\n\n// const fetchHeldItemInfo = async (item) => {\n//   const url = `https://pokeapi.co/api/v2/item/${item}`;\n//   const res = await fetch(url);\n//   const data = await res.json();\n//   const itemInfo = {};\n\n//   itemInfo.name = data.name;\n//   itemInfo.effect = data.effect_entries;\n//   return itemInfo;\n// }\n\n// const displayHeldItems = async (heldItems) => {\n//   const items = await fetchHeldItems(heldItems);\n//   items.forEach(item => {\n//     const listEl = document.createElement(\"li\")\n//     const a = document.createElement(\"a\");\n//     const name = item.name;\n//     // console.log(item)\n//     a.setAttribute(\"href\", `https://pokemondb.net/item/${name}`);\n//     a.innerText = `${name}`;\n//     listEl.appendChild(a);\n//     itemsDisplay.appendChild(listEl);\n//     // console.log(fetchHeldItemInfo(item.name))\n//   })\n//   // console.log(items)\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb2tlbW9uX2RyYWZ0ZXIvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;