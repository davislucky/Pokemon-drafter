/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("const abilitiesDisplay = document.querySelector(\".ability-selector-content\");\nconst typeDisplay = document.querySelector(\".types-content\");\nconst baseStatsDisplay = document.querySelector(\".base-stats-content\");\nconst pokedexList = document.getElementById(\"pokedex-list\");\nconst displayEntry = document.querySelector(\".display\");\nconst preview = document.getElementById(\"preview-display\");\nconst movesDisplay = document.querySelector(\".moves-selector-content\");\nconst movesList = document.querySelector(\".move-selector-list\");\nconst itemsDisplay = document.querySelector(\".item-selector-content\");\nconst fetchPokedex = async () => {\n  const url = `https://pokeapi.co/api/v2/pokemon?limit=1010`; // want to eventually limit this query based on user's limits\n  const res = await fetch(url);\n  const data = await res.json();\n  const pokedex = data.results.map((result, index) => ({\n    ...result,\n    name: result.name,\n    id: index + 1,\n    sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`\n  }));\n  return pokedex;\n};\nconst displayPokedex = pokedex => {\n  pokedex.forEach(entry => {\n    const li = document.createElement(\"li\");\n    li.classList.add(\"list-item\", \"display\", `${entry.name}`);\n    const div = document.createElement(\"div\");\n    div.classList.add(\"list-content\");\n    const button = createButton(entry);\n    div.appendChild(button);\n    li.appendChild(div);\n    pokedexList.append(li);\n  });\n};\n\n// function pokedexSearch() {\n//   let input = document.getElementById(\"search-input\");\n//   let filter = input.value.toUpperCase();\n//   let ul = document.getElementById(\"pokedex-list\");\n//   let li = ul.getElementsByTagName(\"li\");\n//   let button = li.getElementsByTagName(\"dbutton\")\n\n//   for (let i = 0; i < li.length; i++) {\n//     let h2 = li[i].getElementsByTagName(\"h2\")[0];\n//     let textValue = h2.textContent || h2.innerText;\n\n//     if (textValue.toUpperCase().indexOf(filter) > -1) {\n//       li[i].display = \"\";\n//     } else {\n//       li[i].display = \"none\";\n//     }\n//   }\n// }\n\ndocument.getElementById('search-input').addEventListener('input', function (event) {\n  const searchTerm = event.target.value.toUpperCase();\n  const listItems = document.querySelectorAll('.list-item');\n  listItems.forEach(function (item) {\n    // const text = item.querySelectorAll(\"button.display-button > a\");\n    const children = item.childNodes;\n    // console.log(children)\n    const childtwo = children[0];\n    // console.log(childtwo)\n    const gkids = childtwo.childNodes[0];\n    // console.log(\"gkids:\", gkids)\n    const ggkids = gkids.childNodes[1];\n    // console.log(ggkids);\n    const itemText = ggkids.innerText.toUpperCase();\n    if (itemText.includes(searchTerm)) {\n      item.style.display = 'list-item';\n    } else {\n      item.style.display = 'none';\n    }\n  });\n});\nconst createButton = entry => {\n  const button = document.createElement(\"button\");\n  button.classList.add(\"display-button\");\n  const img = document.createElement(\"img\");\n  img.classList.add(\"small\");\n  img.src = entry.sprite;\n  const h2 = document.createElement(\"h2\");\n  h2.innerText = entry.id + \". \" + entry.name;\n  h2.classList.add(\"title\");\n  button.appendChild(img);\n  button.appendChild(h2);\n  button.addEventListener(\"click\", handleClickPokedex);\n  button.dataset.id = entry.id;\n  button.dataset.name = entry.name;\n  button.dataset.sprite = entry.sprite;\n  return button;\n};\nconst clearFields = () => {\n  clearChildren(movesDisplay);\n  clearChildren(baseStatsDisplay);\n  clearChildren(abilitiesDisplay);\n  clearChildren(typeDisplay);\n};\nconst clearChildren = element => {\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n};\nconst handleClickPokedex = async event => {\n  clearFields();\n  const target = event.currentTarget;\n  changePreview(target.dataset.sprite);\n  const pokemon = await fetchPokemonData(target.dataset.id);\n  displayPokemon(pokemon);\n};\nconst displayPokemon = pokemon => {\n  // console.log(pokemon);\n  // displayMoves(pokemon.moves);\n  displayAbilities(pokemon.abilities);\n  displayType(pokemon.types);\n  displayEVs(pokemon.baseStatName, pokemon.evs);\n  displayIVs(pokemon.baseStatName, pokemon.ivs);\n  // displayBaseStats(pokemon.baseStatName, pokemon.baseStat);\n  // displayHeldItems();\n};\n\nconst displayType = types => {\n  types.forEach(type => {\n    const display = document.createElement(\"p\");\n    display.innerText = `${type}`;\n    typeDisplay.appendChild(display);\n  });\n};\nconst changePreview = src => {\n  preview.src = src;\n};\nconst fetchPokemonData = async id => {\n  const url = `https://pokeapi.co/api/v2/pokemon/${id}/`;\n  const res = await fetch(url);\n  const data = await res.json();\n  const pokemon = {};\n  pokemon.abilities = data.abilities.map(ability => ability.ability.name);\n  pokemon.types = data.types.map(type => type.type.name);\n  pokemon.moves = data.moves.map(move => move.move.name);\n  pokemon.baseStat = data.stats.map(baseStat => baseStat.base_stat);\n  pokemon.baseStatName = data.stats.map(name => name.stat.name);\n  pokemon.evs = data.stats.map(ev => ev.effort);\n  pokemon.ivs = data.stats.map(ev => ev.effort);\n  pokemon.height = data.height; // measured in meters so divide by 10\n  pokemon.weight = data.weight; //measured in kgs so divide by 10\n  return pokemon;\n};\nconst fetchMoveInfo = async move => {\n  const url = `https://pokeapi.co/api/v2/move/${move}`;\n  const res = await fetch(url);\n  const data = await res.json();\n  const moveInfo = {};\n  moveInfo.name = data.name;\n  moveInfo.type = data.type.name;\n  moveInfo.power = data.power;\n  moveInfo.accuracy = data.accuracy;\n  moveInfo.class = data.damage_class.name;\n  moveInfo.url = `https://pokemondb.net/move/${move}`;\n  return moveInfo;\n};\nconst displayMoves = moves => {\n  moves.forEach(move => {\n    displayMove(move);\n  });\n};\nconst displayMove = async move => {\n  const moveInfo = await fetchMoveInfo(move);\n  const display = document.createElement(\"li\");\n  // display.setAttribute(\"value\", `${move}`);\n  display.innerText = `${moveInfo.type}`.split(\"-\").join(\" \");\n  movesList.appendChild(display);\n  movesDisplay.appendChild(movesList);\n};\nconst fetchHeldItems = async () => {\n  const url = `https://pokeapi.co/api/v2/item-attribute/holdable`;\n  const res = await fetch(url);\n  const data = await res.json();\n  const items = data.items;\n  return items;\n};\nconst fetchHeldItemInfo = async item => {\n  const url = `https://pokeapi.co/api/v2/item/${item}`;\n  const res = await fetch(url);\n  const data = await res.json();\n  const itemInfo = {};\n  itemInfo.name = data.name;\n  itemInfo.effect = data.effect_entries;\n  return itemInfo;\n};\nconst displayHeldItems = async () => {\n  const items = await fetchHeldItems();\n  items.forEach(item => {\n    const listEl = document.createElement(\"li\");\n    const a = document.createElement(\"a\");\n    const name = item.name;\n    console.log(name);\n    a.setAttribute(\"href\", `https://pokemondb.net/item/${name}`);\n    a.innerText = `${item.name} `;\n    listEl.appendChild(a);\n    itemsDisplay.appendChild(listEl);\n    console.log(fetchHeldItemInfo(item.name));\n  });\n};\nconst displayAbilities = abilities => {\n  abilities.forEach(ability => {\n    const a = document.createElement(\"a\");\n    a.setAttribute(\"href\", `https://pokemondb.net/ability/${ability}`);\n    a.innerText = `${ability} `;\n    abilitiesDisplay.appendChild(a);\n  });\n};\nconst displayBaseStats = (names, baseStats) => {\n  const stats = {};\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n    for (let j = 0; j < baseStats.length; j++) {\n      const number = baseStats[j];\n      stats[name] = number;\n    }\n  }\n  console.log(stats);\n\n  // Object.entries(stats).forEach(stat => {\n  //   const display = document.createElement(\"p\");\n  //   display.innerText = `${stat}`\n  //   baseStatsDisplay.appendChild(display); //not working\n  // });\n};\n\nconst displayEVs = (names, evs) => {\n  const stats = {};\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n    for (let j = 0; j < evs.length; j++) {\n      stats[name] = 0;\n    }\n  }\n  console.log(stats);\n  return stats;\n};\nconst displayIVs = (names, ivs) => {\n  const stats = {};\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n    for (let j = 0; j < ivs.length; j++) {\n      stats[name] = 0;\n    }\n  }\n  console.log(stats);\n  return stats;\n};\nconst main = async () => {\n  const pokedex = await fetchPokedex();\n  displayPokedex(pokedex);\n};\nmain();\nconst listItems = document.querySelectorAll('.display-button');\nconsole.log(listItems);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb2tlbW9uX2RyYWZ0ZXIvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;